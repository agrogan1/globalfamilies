{
  "hash": "3255a2055b7ce5529d9dd2332726162b",
  "result": {
    "engine": "knitr",
    "markdown": "# A Quick Introduction To `ggplot2`\n\n## Why Use `ggplot`?[^moreinformation] \n\nA great deal of data analysis and visualization involves the same core set of steps:  get some data, clean it up a little, run some descriptive statistics, run some bivariate statistics, create a graph or a visualization. **ggplot2** can be an important part of a replicable, automated, documented workflow for complex projects.\n\n\n```{mermaid}\n%%| fig-width: 7\n\nflowchart LR\n  A(have a question) --> B(get data)\n  B --> C(process and clean data) \n  C --> D(visualize data)\n  D --> E(analyze data)\n  E --> F(make conclusions)\n  F --> G(share ideas)\n  \n```\n\n\nGiven the fact that we often want to apply the same core set of tasks to new questions and new data, there are ways to overcome the steep learning curve and learn a replicable set of commands that can be applied to problem after problem.\n\n> The same 5 to 10 lines of ggplot2 code can often be tweaked over and over again for multiple projects.\n\n## The Essential Idea Of `ggplot` Is Simple \n\nThere are 3 essential elements to any `ggplot` call:\n\n1. A reference to the data you are using.\n2. An *aesthetic* that tells `ggplot` which variables are being mapped to the *x axis*, *y axis*, (and often other attributes of the graph, such as the *color*, * color fill*, or even the *shape*, *size*, *transparency*, or *line type*).  Intuitively, the aesthetic can be thought of as **what you are graphing**.\n3. A *geom* or *geometry* that tells ggplot about the basic structure of the graph.  Intuitively, the geom can be thought of as **how you are graphing it**.\n\nYou can also add other options, such as a *graph title*, *axis labels* and *overall theme* for the graph.\n\n## Get Started\n\n### Call Libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2) # beautiful graphs\n\nlibrary(ggthemes) # nice themes for ggplot2\n```\n:::\n\n\n### Get Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload(\"./simulate-data/MICSsimulated.RData\") # data in R format\n```\n:::\n\n\n## Some Examples[^vartype]\n\n### One Continuous Variable\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# anything that starts with a '#' is a comment\n\nggplot(MICSsimulated, # the data I am using\n       aes(x = GII)) + # the variable I am using\n  geom_histogram() # how I am graphing it\n```\n\n::: {.cell-output-display}\n![Histogram of Gender Inequality Index](quick-intro-ggplot2_files/figure-html/fig-ggplot-histogram-1.png){#fig-ggplot-histogram width=672}\n:::\n:::\n\n\n[^vartype]: Changing variables from factor to numeric (e.g. `aes(x = as.numeric(outcome))`), and *vice versa* can sometimes be a simple solution that solves a lot of problems when you are trying to graph your variables.\n\nWe can add color and a theme.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# anything that starts with a '#' is a comment\n\nggplot(MICSsimulated, # the data I am using\n       aes(x = GII)) + # the variable I am using\n  geom_histogram(fill = \"#1CABE2\") + # how I am graphing it\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Histogram of Gender Inequality Index With Better Options](quick-intro-ggplot2_files/figure-html/fig-ggplot-histogram-color-1.png){#fig-ggplot-histogram-color width=672}\n:::\n:::\n\n\n### One Categorical Variable\n\nMake sure R knows `aggression` is a categorical variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMICSsimulated$aggression <- \n  factor(MICSsimulated$aggression, # original numeric variable\n         levels = c(0, 1), \n         labels = c(\"no aggression\", \"aggression\"), \n         ordered = TRUE) # whether order matters\n```\n:::\n\n\nNow make the graph.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(MICSsimulated, # the data I am using\n       aes(x = aggression)) + # the variable I am using\n  geom_bar() # how I am graphing it\n```\n\n::: {.cell-output-display}\n![Bar Graph of Aggression](quick-intro-ggplot2_files/figure-html/fig-ggplot-bar-1.png){#fig-ggplot-bar width=672}\n:::\n:::\n\n\nWe can add color and a theme.[^legend]\n\n[^legend]: Notice how use of `fill` governs both the color fill in the graph below, as well as the legend that is produced in the graph. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(MICSsimulated, # the data I am using\n       aes(x = aggression, # x is aggression\n           fill = aggression)) + # fill is also aggression\n  geom_bar() + # how I am graphing it\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Bar Graph of Aggression With Better Options](quick-intro-ggplot2_files/figure-html/fig-ggplot-bar-color-1.png){#fig-ggplot-bar-color width=672}\n:::\n:::\n\n\n## Make a More Complex Graph[^legend2]\n\n[^legend2]: Notice how use of `fill` governs both the color fill in the graph below, as well as the legend that is produced in the graph. \n\nMake sure R knows `cd1` is a categorical variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMICSsimulated$cd1 <- \n  factor(MICSsimulated$cd1, # original numeric variable\n         levels = c(0, 1), \n         labels = c(\"no spank\", \"spank\"), \n         ordered = TRUE) # whether order matters\n```\n:::\n\n\nNow make the graph.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(MICSsimulated, # the data I am using\n       aes(x = cd1, # x is spanking\n           fill = aggression)) + # fill is aggression\n  geom_bar(position = position_dodge()) + # graph with \"dodged\" bars\n  labs(title = \"Spanking and Aggression\", \n       x = \"spanking\", \n       y = \"count\") +\n  scale_fill_manual(values = c(\"#1CABE2\", # UNICEF colors\n                               \"#D8D1C9\")) +\n  theme_minimal()  # theme\n```\n\n::: {.cell-output-display}\n![](quick-intro-ggplot2_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nAn interactive tutorial to create this plot can be found [here](https://agrogan1.github.io/globalfamilies-flipbook/).\n\n[^moreinformation]: More information can be found here:  https://agrogan1.github.io/R/introduction-to-ggplot2/introduction-to-ggplot2.html\n\n\n",
    "supporting": [
      "quick-intro-ggplot2_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}