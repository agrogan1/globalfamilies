{
  "hash": "c8735be9b03bcaaf4a185b351cc043f1",
  "result": {
    "markdown": "# Simulating MICS Data\n\nThis appendix details the process of creating the simulated MICS data that is employed in the examples on this website. \n\nMICS data are freely available, but usage of MICS requires completing a user agreement, and registering for a user account, on the MICS website, and thus MICS data should not be shared openly on a public website. \n\nThis Appendix is highly technical. It is not necessary to understand this Appendix to benefit from the rest of this website. However, the details of creating this simulated data may be of interest to some users. \n\n## Call Relevant Libraries\n\nWe need to call a number of relevant R libraries to simulate the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nlibrary(tibble) # new dataframes\n\nlibrary(ggplot2) # nifty graphs\n\nlibrary(labelled) # labels\n\nlibrary(haven) # write Stata\n\nlibrary(tidyr) # tidy data\n\nlibrary(dplyr) # wrangle data\n\nlibrary(lme4) # multilevel models\n\nlibrary(sjPlot) # nice tables for MLM\n\nlibrary(pander) # nice tables\n```\n:::\n\n\n\n## Setup Some Basic Parameters of the Data\n\nBecause simulation is a random process, we set a *random seed* so that the simulation produces the same data set each time it is run.\n\nWe are going to simulate data with 30 countries, and 100 individuals per country.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nset.seed(1234) # random seed\n\nN_countries <- 30 # number of countries\n\nN <- 100 # sample size / country\n```\n:::\n\n\n\n## Simulate Data Based on MICS\n\nThis is multilevel data where individuals are nested, or clustered, inside countries. Excellent technical and pedagogical discussions of multilevel models can be found in @Raudenbush2002, @Singer2003, @RabeHesketh2022, @Luke2004, and @Kreft1998.\n\n### Level 2\n\nSimulating the second level of the data is relatively easy. We simply need to provide the number of countries, and then generate random effects for each country. Random effects are discussed in the above references, but essentially represent country level differences in the data.\n\nWe also create `GII`, a *Gender Inequality Index* [@UNDPGII] variable, and `HDI`, a measure of the *Human Development Index* [@UNDPHDI], since these are country level, or Level 2 variables. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ncountry <- seq(1:N_countries) # sequence 1 to 30\n\nGII <- rbinom(N_countries, 100, .25) # gender inequality index\n\nHDI <- rbinom(N_countries, 100, .25) # Human Development Index\n\nu0 <- rnorm(N_countries, 0, .25) # random intercept\n\nu1 <- rnorm(N_countries, 0, .05) # random slope\n\nrandomeffects <- data.frame(country, \n                            GII, \n                            HDI, \n                            u0, \n                            u1) # dataframe of random effects\n```\n:::\n\n\n\n### Level 1\n\nSimulating the Level 1 data is more complex. \n\nWe `uncount` the data by 100 to create 100 observations for each country. We then create an `id` number. \n\nWe create randomly simulated parental discipline variables with proportions similar to those in MICS. \n\nLastly, we need to create the dependent variable. Because this is a dichotomous outcome, the process is somewhat complex. We need to craete a linear combination `z`, using regression weights derived from MICS. We then calculate predicted probabilities, and lastly generate a dichotomous `aggression` outcome from those probabilities. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nMICSsimulated <- randomeffects %>% \n  uncount(N) %>% # N individuals / country\n  mutate(id = row_number()) %>% # unique id\n  mutate(cd1 = rbinom(N * N_countries, 1, .38), # spank\n         cd2 = rbinom(N * N_countries, 1, .05), # beat\n         cd3 = rbinom(N * N_countries, 1, .64), # shout\n         cd4 = rbinom(N * N_countries, 1, .78)) %>% # explain\n  mutate(z = 0 + # linear combination based on MICS\n           .01 * GII +\n           .23 * cd1 +\n           .52 * cd2 +\n           .42 * cd3 +\n           -.21 * cd4 + \n           u0) %>%\n  mutate(p = exp(z) / (1 + exp(z))) %>% # probability\n  mutate(aggression = rbinom(N * N_countries, 1, p)) %>% # binomial y\n  select(id, country, GII, HDI,\n         cd1, cd2, cd3, cd4, \n         aggression)\n```\n:::\n\n\n\n### Variable Labels\n\nWe add variable labels to the data which will help us to understand the data as we analyze it.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nvar_label(MICSsimulated$id) <- \"id\"\n\nvar_label(MICSsimulated$country) <- \"country\"\n\nvar_label(MICSsimulated$GII) <- \"Gender Inequality Index\"\n\nvar_label(MICSsimulated$HDI) <- \"Human Development Index\"\n\nvar_label(MICSsimulated$cd1) <- \"spank\"\n\nvar_label(MICSsimulated$cd2) <- \"beat\"\n\nvar_label(MICSsimulated$cd3) <- \"shout\"\n\nvar_label(MICSsimulated$cd4) <- \"explain\"\n\nvar_label(MICSsimulated$aggression) <- \"aggression\"\n```\n:::\n\n::: {#tbl-varlabels .cell tbl-cap='Variable Labels'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npander(labelled::look_for(MICSsimulated)[1:4]) # list out variable labels\n```\n\n::: {.cell-output-display}\n-------------------------------------------------------\n pos    variable             label            col_type \n----- ------------ ------------------------- ----------\n  1        id                 id                int    \n\n  2     country             country             int    \n\n  3       GII       Gender Inequality Index     int    \n\n  4       HDI       Human Development Index     int    \n\n  5       cd1                spank              int    \n\n  6       cd2                beat               int    \n\n  7       cd3                shout              int    \n\n  8       cd4               explain             int    \n\n  9    aggression         aggression            int    \n-------------------------------------------------------\n:::\n:::\n\n\n\n## Explore The Simulated Data With A Graph\n\nExploring the simulated data with a graph helps us to ensure that we have simulated plausible data. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nggplot(MICSsimulated,\n       aes(x = cd1, # x is spanking\n           y = aggression, # y is aggression\n           color = factor(country))) + # color is country\n  geom_smooth(method = \"glm\", # glm smoother\n              method.args = list(family = \"binomial\"),\n              alpha = .1) + # transparency for CI's\n  labs(title = \"Aggression as a Function of Spanking\",\n       x = \"spank\",\n       y = \"aggression\") +\n  scale_color_viridis_d(name = \"Country\") + # nice colors\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Graph of Simulated Data](simulate-data_files/figure-pdf/fig-p1-1.pdf){#fig-p1 fig-pos='H'}\n:::\n:::\n\n\n\n## Explore The Simulated Data With A Logistic Regression \n\nSimilarly, exploring the data with a logistic regression confirms that we have created plausible data. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nfit1 <- glmer(aggression ~ cd1 + cd2 + cd3 + cd4 + GII +\n                (1 | country), \n              family = \"binomial\",\n              data = MICSsimulated,\n              control = glmerControl(optimizer =\"bobyqa\"))\n\nsummary(fit1) # table for PDF\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: aggression ~ cd1 + cd2 + cd3 + cd4 + GII + (1 | country)\n   Data: MICSsimulated\nControl: glmerControl(optimizer = \"bobyqa\")\n\n     AIC      BIC   logLik deviance df.resid \n  4043.0   4085.1  -2014.5   4029.0     2993 \n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.3105 -1.0575  0.6729  0.8799  1.3032 \n\nRandom effects:\n Groups  Name        Variance Std.Dev.\n country (Intercept) 0.04616  0.2148  \nNumber of obs: 3000, groups:  country, 30\n\nFixed effects:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -0.40705    0.35298  -1.153  0.24883    \ncd1          0.21337    0.07766   2.748  0.00600 ** \ncd2          0.58546    0.17948   3.262  0.00111 ** \ncd3          0.45124    0.07778   5.801 6.57e-09 ***\ncd4         -0.36836    0.09156  -4.023 5.74e-05 ***\nGII          0.02269    0.01388   1.635  0.10201    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n    (Intr) cd1    cd2    cd3    cd4   \ncd1 -0.070                            \ncd2 -0.022 -0.010                     \ncd3 -0.157  0.002  0.020              \ncd4 -0.204 -0.009 -0.004 -0.020       \nGII -0.954 -0.011 -0.003  0.023  0.004\n```\n:::\n:::\n\n\n\n## Write data to various formats\n\nLastly, we write the data out to various formats: R, Stata, and SPSS.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nsave(MICSsimulated, \n     file = \"./simulate-data/MICSsimulated.RData\") # R\n\nwrite_dta(MICSsimulated, \n          \"./simulate-data/MICSsimulated.dta\") # Stata\n\nwrite_sav(MICSsimulated, \n          \"./simulate-data/MICSsimulated.sav\") # SPSS\n```\n:::\n",
    "supporting": [
      "simulate-data_files/figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}